version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: library
    depends_on:
      - postgres
    volumes:
      - .:/app
    env_file:
      - ./.envs/.env
    ports:
      - "8000:8000"
    command: /start
    networks:
      - backend
    restart: always
    hostname: library_api

  postgres:
    image: postgres:13.0
    restart: always
    hostname: library-db
    container_name: library-db
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=postgres
    networks:
      - backend

  es:
    container_name: es
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.10
    environment:
      bootstrap.memory_lock: 'true'
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
      node.master: 'true'
      node.data: 'true'
      node.ingest: 'false'
      node.ml: 'false'
      node.name: es5
      http.compression: 'true'
      http.port: 9200
      transport.tcp.port: 9300
      search.remote.connect: 'false'
      discovery.zen.minimum_master_nodes: 1
      indices.query.bool.max_clause_count: 10240
      xpack.security.enabled: 'false'
      xpack.monitoring.enabled: 'false'
      xpack.graph.enabled: 'false'
      xpack.watcher.enabled: 'false'
      xpack.ml.enabled: 'false'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data:/usr/share/elasticsearch1/data
    ports:
      - 9200:9200
    networks:
      - backend

networks:
  backend:

volumes:
  data:
    driver: local
  local_postgres_data: {}
